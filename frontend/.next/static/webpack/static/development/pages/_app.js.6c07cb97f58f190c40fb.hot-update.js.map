{"version":3,"file":"static/webpack/static/development/pages/_app.js.6c07cb97f58f190c40fb.hot-update.js","sources":["webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport User, { CURRENT_USER_QUERY } from './User';\n\n// So StripeCheckout takes a ton of parameters...look up the documentation to see the whole list.\n//   Options include things like currency, amount, token, desription, and even bitcoin 🤔\n//   Obviously, you want to interpolate things like the amount into these arguments 👍\n\n// Likewise, we get an awful error it item doesn't exist, so you check with me.cart[0].item && 👍\n\n// So the way it works:\n//   You create a token with the CC info that is sent to Stripe who then send your token to the server\n\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  onToken = res => {\n    console.log('On Token Called!');\n    console.log(`this is the res: ${res}`)\n  }\n  render() {\n    return <User>{({ data: { me } }) => <StripeCheckout\n      amount={calcTotalPrice(me.cart)}\n      name=\"Project Musa\"\n      description={`${totalItems(me.cart)} products ordered!`}\n      // Be careful, this produces an awful bug:\n      image={me.cart[0].item && me.cart[0].item.image}\n      stripeKey=\"pk_live_grzfRYXcSWt70FeeiFIKFucz00tkYgt2an\"\n      currency=\"USD\"\n      email={me.email}\n      token={res => this.onToken(res)}\n\n    >{this.props.children}</StripeCheckout>}</User>;\n  }\n}\n\nexport default TakeMyMoney;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAlBA;AACA;AAoBA;;;;A","sourceRoot":""}