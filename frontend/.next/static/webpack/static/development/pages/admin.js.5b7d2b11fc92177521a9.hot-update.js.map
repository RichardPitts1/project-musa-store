{"version":3,"file":"static/webpack/static/development/pages/admin.js.5b7d2b11fc92177521a9.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\n// import Error from './ErrorMessage';\nimport Router from 'next/router';\n\n// So the mutation(createItem) and query(whatever you defined in schema) have to return...\n//   wait for it...a function! üïµÔ∏è For arguments for said function, You first get the mutation \n//  function, and second the payload which actually is (loading, error, called, and data)\n\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`;\n\n\nexport default class CreateItem extends Component {\n  state = {\n    title: 'Title of Speaker?',\n    description: '',\n    image: '',\n    largeImage: '',\n    price: 0,\n};\n  handleChange = (e) => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  }\n\n  uploadFile = async e => {\n    console.log(\"Uploading file...\");\n    const files = e.target.files;\n    // part of the JS language bra üëç\n    const data = new FormData()\n    data.append('file', files[0]);\n    data.append('upload_preset', 'projectmusa')\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/project-musa/image/upload', {\n      method: 'POST',\n      body: data\n      });\n      const file = await res.json()\n      console.log(file);\n      // Now we gotta put the data back into those spots in our state.\n      // You can do file.eager[0].secure_url to get the resized one üëç\n      this.setState({\n        image: file.secure_url,\n        largeImage: file.eager[0].secure_url\n      })\n    };\n\n  render() {\n    return (\n      <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n        {(createItem, { loading, error }) => (\n\n      <Form onSubmit={async e => {\n        // So we stop the form from submitting\n        e.preventDefault();\n        console.log(\"here is the state:\")\n        console.log(this.state);\n        // call the mutation\n        const res = await createItem();\n        console.log(\"here is the response:\")\n        console.log(res)\n\n        // This is how you would route it to the specific page that you want!\n        //   but bro you need refetching queries to not get a 404 üëç\n\n        // Router.push({\n        //   pathname: '/item',\n        //   query: { id: res.data.createItem.id }\n        // })\n\n      }}>\n        {/* <Error error={error} /> */}\n        <fieldset disabled={loading} aria-busy={true}>\n        <br></br>\n          <label htmlFor=\"title\">\n            Title\n            <input \n              type=\"text\" \n              id=\"title\" \n              name=\"title\" \n              placeholder=\"Title\" \n              required \n              value={this.state.title} \n              onChange={this.handleChange}\n              />\n          </label>\n\n    \n          <label htmlFor=\"price\">\n            Price\n            <input \n              type=\"text\" \n              id=\"price\" \n              name=\"price\" \n              placeholder=\"Price\" \n              required \n              value={this.state.price} \n              onChange={this.handleChange}\n              />\n          </label>\n\n          <label htmlFor=\"image\">\n            Image\n            <input\n              type=\"file\"\n              id=\"image\" \n              name=\"image\" \n              placeholder=\"Upload Speaker Nudes Please\" \n              required \n              onChange={this.uploadFile}\n              />\n              {this.state.image && <img src={this.state.image} alt=\"Image Preview\" />}\n        \n          </label>\n\n          <label htmlFor=\"description\">\n            Description\n            <textarea \n              id=\"description\" \n              name=\"description\" \n              placeholder=\"Describe the Speaker\" \n              required \n              value={this.state.description} \n              onChange={this.handleChange}\n              />\n          </label>\n\n          <button type=\"submit\">Create Speaker</button>\n        </fieldset>\n      </Form>\n                )}\n                </Mutation>\n    );\n  }\n}\n\nexport { CREATE_ITEM_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAQA;AARA;AAAA;AACA;AADA;AAYA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7EA;AAmFA;;;;AA1HA;AACA;AADA;;;;;A","sourceRoot":""}